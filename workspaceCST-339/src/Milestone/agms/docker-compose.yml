version: '3.8'
services:
  mysql:
    image: mysql:8.0
    restart: always
    container_name: agms-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=agms
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - agms-network
  
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: agms-app
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://agms-mysql:3306/agms
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    depends_on:
      - mysql
    networks:
      - agms-network

  agms-app:
    build: .
    ports:
      - "8050:8050"  # Match application.properties port
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SERVER_PORT=8050
    volumes:
      - ./src:/app/src  # Mount source code
      - ./target:/app/target  # Mount compiled classes
      - ~/.m2:/root/.m2
    networks:
      - agms-network

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://sonarqube-db:5432/sonarqube
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    depends_on:
      - sonarqube-db
    networks:
      - agms-network
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions

  sonarqube-db:
    image: postgres:latest
    container_name: sonarqube-db
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonarqube
    volumes:
      - sonarqube_db_data:/var/lib/postgresql/data
    networks:
      - agms-network

networks:
  agms-network:
    driver: bridge

volumes:
  mysql_data:
  sonarqube_db_data:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
  mysql-data: